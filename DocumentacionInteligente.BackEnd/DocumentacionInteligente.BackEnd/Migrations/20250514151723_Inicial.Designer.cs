// <auto-generated />
using System;
using DocumentacionInteligente.BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentacionInteligente.BackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250514151723_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DOCUMENTOS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CATEGORIASID")
                        .HasColumnType("int");

                    b.Property<int?>("CATEGORIA_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("CREADO_IA")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CREATE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESTADO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUTA_ARCHIVO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TITULO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("USUARIO_ID")
                        .HasColumnType("int");

                    b.Property<int?>("VERSION_ACTUAL")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CATEGORIASID");

                    b.ToTable("DOCUMENTOS", (string)null);
                });

            modelBuilder.Entity("DocumentacionInteligente.BackEnd.Models.CATEGORIAS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CREATE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPCION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOMBRE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("CATEGORIAS", (string)null);
                });

            modelBuilder.Entity("IA_PROCESAMIENTOS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DOCUMENTO_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime2");

                    b.Property<string>("RESULTADO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIPO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("IA_PROCESAMIENTOS", (string)null);
                });

            modelBuilder.Entity("LOGS_ACCESO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ACCION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DOCUMENTO_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime2");

                    b.Property<int>("USUARIO_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LOGS_ACCESO", (string)null);
                });

            modelBuilder.Entity("PALABRAS_CLAVE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DOCUMENTO_ID")
                        .HasColumnType("int");

                    b.Property<string>("PALABRA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PALABRAS_CLAVE", (string)null);
                });

            modelBuilder.Entity("USUARIOS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CORREO")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CREATE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOMBRE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PASSWORD_HASH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ROL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("VERSIONES", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DOCUMENTO_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FECHA_CREACION")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOTAS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NUMERO_VERSION")
                        .HasColumnType("int");

                    b.Property<string>("RUTA_ARCHIVO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("VERSIONES", (string)null);
                });

            modelBuilder.Entity("DOCUMENTOS", b =>
                {
                    b.HasOne("DocumentacionInteligente.BackEnd.Models.CATEGORIAS", null)
                        .WithMany("DOCUMENTOS")
                        .HasForeignKey("CATEGORIASID");
                });

            modelBuilder.Entity("DocumentacionInteligente.BackEnd.Models.CATEGORIAS", b =>
                {
                    b.Navigation("DOCUMENTOS");
                });
#pragma warning restore 612, 618
        }
    }
}
