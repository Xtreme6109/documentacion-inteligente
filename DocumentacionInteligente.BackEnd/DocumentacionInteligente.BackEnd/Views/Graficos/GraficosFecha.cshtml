@{
    ViewData["Title"] = "Documentos por Fecha";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/date-fns@2.29.3/dist/date-fns.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@2.0.0/dist/chartjs-adapter-date-fns.bundle.min.js"></script>


<style>
  html, body {
    height: 100%;
    margin: 0;
  }
  body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
  }
  main {
    flex: 1 1 auto;
    overflow-y: auto;
    padding: 1rem;
  }
.chart-container {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
}

/* Alturas más específicas para cada gráfico */
#barChart {
  max-height: 350px;
}

#donutChart {
  max-height: 300px;
}

#stackedAreaChart {
  max-height: 400px;
}

  /* Tabla con scroll y alto limitado */
  .table-responsive {
    max-height: 300px;
    overflow-y: auto;
  }


</style>

<!-- Navbar fijo arriba -->
<nav class="navbar navbar-dark bg-primary sticky-top">
  <div class="container-fluid">
    <button type="button" class="btn btn-outline-light" onclick="volverVue()">
      ← Volver a la Página Principal
    </button>
    <span class="navbar-brand mx-auto text-center">Documentos por Fecha<br>Informe Micro</span>
    <div style="width: 120px;"></div> 
  </div>
</nav>

<main class="container-fluid">
<div class="row mb-4">
  <div class="col-md-6">
    <div class="chart-container border rounded shadow-sm p-3 bg-white">
      <canvas id="lineByDate"></canvas>
    </div>
  </div>
  <div class="col-md-6">
    <div class="chart-container border rounded shadow-sm p-3 bg-white">
      <canvas id="barByDate"></canvas>
    </div>
  </div>
</div>

<div class="row mb-4">
  <div class="col-12">
    <div class="chart-container border rounded shadow-sm p-3 bg-white">
      <canvas id="scatterByDateVersion"></canvas>
    </div>
  </div>
</div>

  <h4 class="mb-3">Tabla de Documentos</h4>
  <div class="table-responsive border rounded shadow-sm bg-white">
    <table id="docTable" class="table table-striped table-bordered mb-0">
      <thead class="table-primary sticky-top">
        <tr>
          <th>ID</th>
          <th>Título</th>
          <th>Categoría</th>
          <th>Estado</th>
          <th>Creado IA</th>
          <th>Fecha Creación</th>
          <th>Versión</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <!-- Sección de detalles extra tipo dashboard -->
  <section class="mt-5 p-4 border rounded shadow-sm bg-light">
    <h5>Información adicional</h5>
    <div class="row">
      <div class="col-md-4 mb-3">
        <div class="p-3 bg-white rounded shadow-sm">
          <h6>Total Documentos</h6>
          <p id="totalDocs" class="fs-3 fw-bold">0</p>
        </div>
      </div>
      <div class="col-md-4 mb-3">
        <div class="p-3 bg-white rounded shadow-sm">
          <h6>Categorías distintas</h6>
          <p id="totalCategories" class="fs-3 fw-bold">0</p>
        </div>
      </div>
      <div class="col-md-4 mb-3">
        <div class="p-3 bg-white rounded shadow-sm">
          <h6>Documentos IA</h6>
          <p id="totalIA" class="fs-3 fw-bold">0</p>
        </div>
      </div>
    </div>
  </section>

</main>

<script>
  function volverVue() {
    // Cambia la ruta según cómo manejas Vue, puede ser un router push o un href normal:
    window.location.href = 'http://localhost:9000/#/inicio'; 
  }

  function agruparPorFecha(documentos) {
    const conteo = {};
    for (const doc of documentos) {
      let fecha = 'Sin Fecha';
      if (doc.createDate) {
        const date = new Date(doc.createDate);
        if (!isNaN(date)) {
          fecha = date.toISOString().split('T')[0]; // solo YYYY-MM-DD
        }
      }
      conteo[fecha] = (conteo[fecha] || 0) + 1;
    }
    return conteo;
  }


  async function fetchDocumentos() {
    const response = await fetch('/api/Documentos/AllDocuments');
    if (!response.ok) {
      alert('Error al cargar documentos');
      return [];
    }
    return await response.json();
  }

  function renderTable(documentos) {
    const tbody = document.querySelector('#docTable tbody');
    tbody.innerHTML = '';
    documentos.forEach(doc => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${doc.id}</td>
        <td>${doc.titulo}</td>
        <td>${doc.nombreCategoria}</td>
        <td>${doc.estado}</td>
        <td>${doc.creadoIA ? 'Sí' : 'No'}</td>
        <td>${new Date(doc.createDate).toLocaleDateString()}</td>
        <td>${doc.versionActual}</td>
      `;
      tbody.appendChild(tr);
    });
  }


function createLineChartByDate(ctx, documentos) {
  const conteoPorFecha = {};

  documentos.forEach(doc => {
    const fecha = new Date(doc.createDate).toISOString().slice(0, 10);
    conteoPorFecha[fecha] = (conteoPorFecha[fecha] || 0) + 1;
  });

  const fechas = Object.keys(conteoPorFecha).sort();
  const data = fechas.map(f => conteoPorFecha[f]);

  return new Chart(ctx, {
    type: 'line',
    data: {
      labels: fechas,
      datasets: [{
        label: 'Documentos por Día',
        data,
        fill: false,
        borderColor: 'rgba(75, 192, 192, 1)',
        backgroundColor: 'rgba(75, 192, 192, 0.2)',
        tension: 0.3
      }]
    },
    options: {
      responsive: true,
      plugins: {
        title: {
          display: true,
          text: 'Documentos Creados por Fecha'
        }
      },
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}

function createVerticalBarByDate(ctx, documentos) {
  const conteo = {};

  documentos.forEach(doc => {
    const fecha = new Date(doc.createDate).toISOString().slice(0, 10);
    conteo[fecha] = (conteo[fecha] || 0) + 1;
  });

  const labels = Object.keys(conteo).sort();
  const data = labels.map(f => conteo[f]);

  return new Chart(ctx, {
    type: 'bar',
    data: {
      labels,
      datasets: [{
        label: 'Documentos por Fecha',
        data,
        backgroundColor: 'rgba(153, 102, 255, 0.6)',
        borderColor: 'rgba(153, 102, 255, 1)',
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      plugins: {
        title: {
          display: true,
          text: 'Cantidad de Documentos por Día'
        }
      },
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}

function createScatterChart(ctx, documentos) {
  const data = documentos.map(doc => ({
    x: new Date(doc.createDate),
    y: doc.versionActual
  }));

  return new Chart(ctx, {
    type: 'scatter',
    data: {
      datasets: [{
        label: 'Documentos por Fecha',
        data: [
          { x: '2025-06-01', y: 5 },
          { x: '2025-06-02', y: 8 },
          { x: '2025-06-03', y: 4 },
          { x: '2025-06-04', y: 7 }
        ],
        backgroundColor: 'rgba(75, 192, 192, 0.7)'
      }]
    },
    options: {
      scales: {
        x: {
          type: 'time',
          time: {
            unit: 'day',
            tooltipFormat: 'dd/MM/yyyy'
          },
          title: {
            display: true,
            text: 'Fecha'
          }
        },
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Número de Documentos'
          }
        }
      },
      plugins: {
        title: {
          display: true,
          text: 'Dispersión Documentos por Fecha'
        }
      }
    }
  });
}
  async function main() {
    const documentos = await fetchDocumentos();
    if (!documentos.length) return;

    renderTable(documentos);

    const conteoFecha = agruparPorFecha(documentos);
    // Para que los datos estén en orden cronológico
    const labels = Object.keys(conteoFecha).sort();
    const data = labels.map(label => conteoFecha[label]);

    document.getElementById('totalDocs').innerText = documentos.length;
    document.getElementById('totalCategories').innerText = labels.length;
    document.getElementById('totalIA').innerText = documentos.filter(d => d.creadoIA).length;

    createLineChartByDate(document.getElementById('lineByDate').getContext('2d'), documentos);
    createVerticalBarByDate(document.getElementById('barByDate').getContext('2d'), documentos);
    createScatterChart(document.getElementById('scatterByDateVersion').getContext('2d'), documentos);


  }

  main();
</script>
